{
    "openapi": "3.0.0",
    "info": {
        "title": "b-my-friend ApplicationAPI",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "description": "Register by name, email, password",
                "operationId": "authRegister",
                "requestBody": {
                    "description": "Pass user's data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Nick"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "name": "test",
                                                "email": "testt@gmail.com",
                                                "email_verified_at": null,
                                                "img": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "password": {
                                            "type": "object",
                                            "example": [
                                                "The password must be at least 6 characters."
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9iLW15LWZyaWVuZC5sb2NcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDQwMDIxOTcsImV4cCI6MTYwNDAwNTc5NywibmJmIjoxNjA0MDAyMTk3LCJqdGkiOiJyb2RINmdBVklOMU9OSk5TIiwic3ViIjoxLCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIn0.O-uXG80fluNYYTWkK5-jCMZV74LPjd8_hi0V4RAzTrg"
                                        },
                                        "user": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "name": "test",
                                                "email": "testt@gmail.com",
                                                "email_verified_at": null,
                                                "img": "base64"
                                            }
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/me": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Testing token",
                "description": "Requires 'Authorization' header with bearer token",
                "operationId": "authMe",
                "responses": {
                    "200": {
                        "description": "Returns auth user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "name": "test",
                                                "email": "testt@gmail.com",
                                                "email_verified_at": null,
                                                "img": "base64"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Error. Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "description": "Logout",
                "operationId": "authLogout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Error. Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/email/change ": {
            "post": {
                "tags": [
                    "email"
                ],
                "summary": "Change email",
                "description": "",
                "operationId": "emailChange",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verification was successfully sent on test@gmail.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "Something went wrong when sending email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "password": [
                                                    "Incorrect password"
                                                ],
                                                "email": [
                                                    "The email has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/email/send-verification ": {
            "post": {
                "tags": [
                    "email"
                ],
                "summary": "Send email verification",
                "description": "Sending email with verification token to user's email",
                "operationId": "emailSend",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verification was successfully sent on test@gmail.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "Something went wrong when sending email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "Something went wrong! Your email has been already confirmed!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Reset Password",
                "description": "Reset password by email",
                "operationId": "authResetPassword",
                "requestBody": {
                    "description": "Pass email address",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email with instruction was successfully sent on test@gmail.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "Something went wrong when sending email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "User with this email address doesn't exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/android/reset-password": {
            "post": {
                "tags": [
                    "android-auth"
                ],
                "summary": "Reset Password",
                "description": "Send email for reseting password",
                "operationId": "authResetPassword",
                "requestBody": {
                    "description": "Pass email address",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email with instruction was successfully sent on test@gmail.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "Something went wrong when sending email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "User with this email address doesn't exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/android/reset-code-check": {
            "post": {
                "tags": [
                    "android-auth"
                ],
                "summary": "Check reset code",
                "description": "Checking reset code",
                "operationId": "authResetCodeCheckAndroid",
                "requestBody": {
                    "description": "Pass email address and code",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@gmail.com"
                                    },
                                    "code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "4587091"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Code confirmed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Incorrect code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/android/password-change": {
            "post": {
                "tags": [
                    "android-auth"
                ],
                "summary": "Change password",
                "description": "Enter new password to change it",
                "operationId": "authPasswordChangeAndroid",
                "requestBody": {
                    "description": "Pass email address, code, password and password confirmation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "code",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@gmail.com"
                                    },
                                    "code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "4587091"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Password successfully changed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Incorrect email or code! Try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/feeds": {
            "post": {
                "tags": [
                    "users/feeds"
                ],
                "summary": "Create new feed",
                "description": "Img should be in base 64",
                "operationId": "postUsersFeeds",
                "requestBody": {
                    "description": "Pass feed data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description",
                                    "img"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Body 1"
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "base 64 "
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Feed successfully created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "type": "object",
                                            "example": [
                                                "The img field is required."
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Something went wrong!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users/feeds?page={page}": {
            "get": {
                "tags": [
                    "users/feeds"
                ],
                "summary": "Get all users feeds",
                "description": "\n    There are fields:\n    -current_page - current page that requested;\n    - data - array with user feeds\n    - first_page_url - url that should be requested to get data of first page\n    - from - from which record we get next part of data\n    - to  - to which record we will fetch data ( for example from:1, to: 20 - this is 1 page)\n    - per_page - number of records per page ( always will be 20)\n    - last_page_url - page that was called before ( this is not previous page)\n    - next_page_url - url for next page\n    - prev_page_url - url for previous page\n    - total - total count of all records\n    ",
                "operationId": "getUsersFeeds",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Number of page",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "id": 1,
                                                    "user_id": 1,
                                                    "img": "base64",
                                                    "description": "dasdasd1444",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                },
                                                {
                                                    "id": 2,
                                                    "user_id": 1,
                                                    "img": "base64",
                                                    "description": "dasdasd1444",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                }
                                            ]
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users/feeds/{id}": {
            "get": {
                "tags": [
                    "users/feeds"
                ],
                "summary": "Get one feed",
                "description": "",
                "operationId": "getUsersFeed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feed id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "feed": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "id": 1,
                                                    "user_id": 1,
                                                    "img": "/uploads/user/1/1606481359.jpg",
                                                    "description": "dasdasd1444",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "users/feeds"
                ],
                "summary": "Update feed",
                "description": "",
                "operationId": "putUsersFeeds",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feed id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Pass feed data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Body 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "object",
                                            "example": [
                                                "The description field is required."
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "users/feeds"
                ],
                "summary": "Delete feed",
                "description": "",
                "operationId": "deleteUsersFeed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feed id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users/feeds/of/{user_id}?page={page}": {
            "get": {
                "tags": [
                    "users/feeds"
                ],
                "summary": "Get feeds of some user",
                "description": "\n    There are fields:\n    -current_page - current page that requested;\n    - data - array with users\n    - first_page_url - url that should be requested to get data of first page\n    - from - from which record we get next part of data\n    - to  - to which record we will fetch data ( for example from:1, to: 20 - this is 1 page)\n    - per_page - number of records per page ( always will be 20)\n    - last_page_url - page that was called before ( this is not previous page)\n    - next_page_url - url for next page\n    - prev_page_url - url for previous page\n    - total - total count of all records\n    ",
                "operationId": "getUserFeeds",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Number of page",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "id": 1,
                                                    "user_id": 1,
                                                    "img": "base64",
                                                    "description": "dasdasd1444",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                },
                                                {
                                                    "id": 2,
                                                    "user_id": 1,
                                                    "img": "base64",
                                                    "description": "dasdasd1444",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                }
                                            ]
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "This user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/followers?page={page}": {
            "get": {
                "tags": [
                    "followers"
                ],
                "summary": "Get all followers",
                "description": "Returns pagination object with all followers.\n    There are fields: <br>\n    -current_page - current page that requested; <br>\n    - data - array with users <br>\n    - first_page_url - url that should be requested to get data of first page (\n    - from - from which record we get next part of data <br>\n    - to  - to which record we will fetch data ( for example from:1, to: 20 - this is 1 page) <br>\n    - per_page - number of records per page ( always will be 20) <br>\n    - last_page_url - page that was called before ( this is not previous page) <br>\n    - next_page_url - url for next page  <br>\n    - prev_page_url - url for previous page  <br>\n    - total - total count of all records <br>\n    ",
                "operationId": "followersGetAll",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Number of page",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "id": 2,
                                                    "name": "Name",
                                                    "email": "test@gmail.com",
                                                    "email_verified_at": "2020-11-11 22:04:31",
                                                    "email_verification_token": null
                                                }
                                            ]
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/followers/count-all": {
            "get": {
                "tags": [
                    "followers"
                ],
                "summary": "Get count of followers",
                "description": "Returns count of user's followers",
                "operationId": "followersGetCountAll",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/following?page={page}": {
            "get": {
                "tags": [
                    "following"
                ],
                "summary": "Get all following",
                "description": "Returns pagination object with all following.\n    There are fields: <br>\n    -current_page - current page that requested; <br>\n    - data - array with users <br>\n    - first_page_url - url that should be requested to get data of first page\n    - from - from which record we get next part of data <br>\n    - to  - to which record we will fetch data ( for example from:1, to: 20 - this is 1 page) <br>\n    - per_page - number of records per page ( always will be 20) <br>\n    - last_page_url - page that was called before ( this is not previous page) <br>\n    - next_page_url - url for next page  <br>\n    - prev_page_url - url for previous page  <br>\n    - total - total count of all records <br>\n    ",
                "operationId": "followingGetAll",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Number of page",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "id": 2,
                                                    "name": "Name",
                                                    "email": "test@gmail.com",
                                                    "email_verified_at": "2020-11-11 22:04:31",
                                                    "email_verification_token": null
                                                }
                                            ]
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/following/get-all?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/following/get-all?page=2"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/following/get-all?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/following/get-all"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/following/get-all?page=2"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/following/count-all": {
            "get": {
                "tags": [
                    "following"
                ],
                "summary": "Get count of following",
                "description": "Returns count of user's following",
                "operationId": "followingGetCountAll",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/following": {
            "post": {
                "tags": [
                    "following"
                ],
                "summary": "Follow to some user",
                "description": "Follow to some user",
                "operationId": "followingFollow",
                "requestBody": {
                    "description": "Pass user id",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Successfully followed Name"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Incorrect user id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/following/{user_id}": {
            "delete": {
                "tags": [
                    "following"
                ],
                "summary": "Unfollow from one user",
                "description": "Unfollow from one user",
                "operationId": "followingUnfollow",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User id from which you are unfollowing",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Successfully unfollowed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong!!!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Incorrect user id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users/posts?page={page}": {
            "get": {
                "tags": [
                    "users/posts"
                ],
                "summary": "Get all users posts",
                "description": "\n    There are fields:\n    -current_page - current page that requested;\n    - data - array with user posts\n    - first_page_url - url that should be requested to get data of first page\n    - from - from which record we get next part of data\n    - to  - to which record we will fetch data ( for example from:1, to: 20 - this is 1 page)\n    - per_page - number of records per page ( always will be 20)\n    - last_page_url - page that was called before ( this is not previous page)\n    - next_page_url - url for next page\n    - prev_page_url - url for previous page\n    - total - total count of all records\n     ",
                "operationId": "getUsersPosts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Number of page",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "id": 1,
                                                    "user_id": 1,
                                                    "title": "test",
                                                    "body": "Post body",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                },
                                                {
                                                    "id": 2,
                                                    "user_id": 1,
                                                    "title": "test 2 ",
                                                    "body": "Post body 2",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                }
                                            ]
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users/posts": {
            "post": {
                "tags": [
                    "users/posts"
                ],
                "summary": "Create new post",
                "description": "",
                "operationId": "postUsersPosts",
                "requestBody": {
                    "description": "Pass post data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "body"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Title 1"
                                    },
                                    "body": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Body 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Post successfully added"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "type": "object",
                                            "example": [
                                                "The title field is required."
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Something went wrong!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users/posts/{id}": {
            "get": {
                "tags": [
                    "users/posts"
                ],
                "summary": "Get one post",
                "description": "",
                "operationId": "getUsersPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "post": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "id": 3,
                                                    "user_id": 2,
                                                    "title": "3333",
                                                    "body": "33333",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "users/posts"
                ],
                "summary": "Update post",
                "description": "",
                "operationId": "putUsersPosts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Pass post data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "body"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Title 1"
                                    },
                                    "body": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Body 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "type": "object",
                                            "example": [
                                                "The title field is required."
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "users/posts"
                ],
                "summary": "Delete post",
                "description": "",
                "operationId": "deleteUsersPosts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users/posts/of/{user_id}?page={page}": {
            "get": {
                "tags": [
                    "users/posts"
                ],
                "summary": "Get posts of some user",
                "description": "\n    There are fields:\n    -current_page - current page that requested;\n    - data - array with users\n    - first_page_url - url that should be requested to get data of first page\n    - from - from which record we get next part of data\n    - to  - to which record we will fetch data ( for example from:1, to: 20 - this is 1 page)\n    - per_page - number of records per page ( always will be 20)\n    - last_page_url - page that was called before ( this is not previous page)\n    - next_page_url - url for next page\n    - prev_page_url - url for previous page\n    - total - total count of all records\n    ",
                "operationId": "getUserPosts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Number of page",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "id": 1,
                                                    "user_id": 1,
                                                    "title": "test",
                                                    "body": "Post body",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                },
                                                {
                                                    "id": 2,
                                                    "user_id": 1,
                                                    "title": "test 2 ",
                                                    "body": "Post body 2",
                                                    "created_at": "2020-11-23 19:54:26",
                                                    "updated_at": "2020-11-23 19:54:26"
                                                }
                                            ]
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/followers/get-all?page=2"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "This user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users?page={page}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "description": "Returns pagination object with all users.\n           There are fields: <br>\n          -current_page - current page that requested; <br>\n          - data - array with users <br>\n          - first_page_url - url that should be requested to get data of first page (WARNING : this should be POST <br>\n          request with get parameter 'page' !!!! ) <br>\n           - from - from which record we get next part of data <br>\n           - to  - to which record we will fetch data ( for example from:1, to: 20 - this is 1 page) <br>\n           - per_page - number of records per page ( always will be 20) <br>\n           - last_page_url - page that was called before ( this is not previous page) <br>\n           - next_page_url - url for next page ( WARNING: this should be POST request with get parameter 'page'!!!) <br>\n           - prev_page_url - url for previous page (WARNING: this should be POST request with get parameter 'page'!!!) <br>\n           - total - total count of all records <br>\n         ",
                "operationId": "usersGetAll",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Number of page",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "id": 2,
                                                    "name": "Name",
                                                    "email": "test@gmail.com",
                                                    "email_verified_at": "2020-11-11 22:04:31",
                                                    "email_verification_token": null,
                                                    "img": "base64"
                                                }
                                            ]
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/users/get-all?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/users/get-all?page=2"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/users/get-all?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/users/get-all"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "http://b-my-friend.loc/api/users/get-all?page=2"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users": {
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Update user's data",
                "description": "",
                "operationId": "putUsers",
                "requestBody": {
                    "description": "Pass user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "object",
                                            "example": [
                                                "The name field is required."
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/users/upload-photo": {
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Upload user photo",
                "description": "",
                "operationId": "uploadUserPhoto",
                "requestBody": {
                    "description": "Pass image in base64",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "img"
                                ],
                                "properties": {
                                    "img": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "base 64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "img": [
                                                    "The img field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "description": "Authorization token obtained from logging in.",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    }
}